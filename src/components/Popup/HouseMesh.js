/*
auto-generated by: https://github.com/react-spring/gltfjsx
*/

import {AnimationMixer, LoopOnce} from 'three'
import React, { useEffect, useRef, useState } from 'react'
import { useLoader, useFrame } from 'react-three-fiber'
import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'

export default function HouseMesh({play, flip, ...props}) {
  const group = useRef()
  const { nodes, materials, animations } = useLoader(GLTFLoader, '/house.glb')

  const actions = useRef()
  const [mixer] = useState(() => new AnimationMixer())
  useFrame((state, delta) => mixer.update(delta))
  useEffect(() => {
    actions.current = {
      HouseFoldAction: mixer.clipAction(animations[0], group.current)
    }
    actions.current.HouseFoldAction.loop = LoopOnce;
    actions.current.HouseFoldAction.clampWhenFinished = true;
    return () => animations.forEach(clip => mixer.uncacheClip(clip))
  }, [])

  useEffect(() => {
    play && actions.current.HouseFoldAction && actions.current.HouseFoldAction.play();
  }, [play])

  return (
    <group ref={group} {...props} dispose={null}>
      <group rotation-y={ flip ? Math.PI : 0}>
        <primitive object={nodes.HouseBase} />
        <skinnedMesh material={materials.HouseMat} geometry={nodes.House.geometry} skeleton={nodes.House.skeleton} />
      </group>
    </group>
  )
}
