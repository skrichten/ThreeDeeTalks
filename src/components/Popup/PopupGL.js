/*
auto-generated by: https://github.com/react-spring/gltfjsx
*/

import * as THREE from 'three'
import React, { useEffect, useRef, useState } from 'react'
import { useLoader, useFrame } from 'react-three-fiber'
import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'

export default function Model(props) {
  const group = useRef()
  const { nodes, materials, animations } = useLoader(GLTFLoader, '/book.glb')

  const actions = useRef()
  const [mixer] = useState(() => new THREE.AnimationMixer())
  useFrame((state, delta) => mixer.update(delta))
  useEffect(() => {
    actions.current = {
      HouseFoldAction: mixer.clipAction(animations[0], group.current),
      WellFoldAction: mixer.clipAction(animations[1], group.current)
    }
    return () => animations.forEach(clip => mixer.uncacheClip(clip))
  }, [])

  return (
    <group ref={group} {...props} dispose={null}>
      <group position={[2.44, 0.32, 0.42]} rotation={[0, 0.57, 1.07]}>
        <primitive object={nodes.Sun_Orientation} />
      </group>
      <group position={[-1.1, 0, 0.13]}>
        <primitive object={nodes.HouseBase} />
        <skinnedMesh material={materials.Material} geometry={nodes.House.geometry} skeleton={nodes.House.skeleton} />
      </group>
      <group position={[0.72, -0.01, 0.27]}>
        <primitive object={nodes.WellBase} />
        <skinnedMesh
          material={materials['Material.001']}
          geometry={nodes.Well.geometry}
          skeleton={nodes.Well.skeleton}
        />
      </group>
      <mesh material={materials['Material.002']} geometry={nodes.Ground.geometry} />
    </group>
  )
}
